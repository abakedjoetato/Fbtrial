#!/bin/bash

# run_fixed - Script to run the Discord bot with proper setup

# Log file
LOG_FILE="run_fixed.log"

# Function to log messages
log() {
  echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Function to check environment
check_environment() {
  # Check if DISCORD_TOKEN is set
  if [ -z "$DISCORD_TOKEN" ]; then
    log "ERROR: DISCORD_TOKEN environment variable not set"
    return 1
  fi
  
  # Check required directories
  for dir in cogs utils; do
    if [ ! -d "$dir" ]; then
      log "ERROR: Required directory '$dir' not found"
      return 1
    fi
  done
  
  # Check required files
  required_files=(
    "main_bot.py"
    "bot_adapter.py"
    "discord_compat_layer.py"
    "utils/error_telemetry.py"
    "utils/mongodb_adapter.py"
    "utils/premium_manager_enhanced.py"
    "cogs/error_handling.py"
    "cogs/basic_commands.py"
  )
  
  for file in "${required_files[@]}"; do
    if [ ! -f "$file" ]; then
      log "ERROR: Required file '$file' not found"
      return 1
    fi
  done
  
  log "Environment check passed"
  return 0
}

# Function to run the bot
run_bot() {
  local prefix="$1"
  shift
  local debug_guilds=("$@")
  
  # Build command
  CMD="python3 main_bot.py"
  
  # Add command-line arguments
  if [ "$prefix" != "!" ]; then
    CMD="$CMD --prefix $prefix"
  fi
  
  # Add debug guilds
  for guild_id in "${debug_guilds[@]}"; do
    CMD="$CMD --debug-guild $guild_id"
  fi
  
  log "Starting bot with command: $CMD"
  
  # Run the bot
  eval "$CMD"
  return $?
}

# Function to handle cleanup
cleanup() {
  log "Received signal, shutting down..."
  
  # Kill any remaining python processes
  pkill -f "python3 main_bot.py" || true
  
  log "Cleanup complete"
  exit 0
}

# Set up signal handlers
trap cleanup SIGINT SIGTERM

# Initialize
log "Starting run_fixed script"

# Parse arguments
PREFIX="!"
DEBUG_GUILDS=()

while [[ $# -gt 0 ]]; do
  case $1 in
    --prefix)
      PREFIX="$2"
      shift 2
      ;;
    --debug-guild)
      DEBUG_GUILDS+=("$2")
      shift 2
      ;;
    *)
      log "Unknown argument: $1"
      shift
      ;;
  esac
done

# Check environment
log "Checking environment..."
if ! check_environment; then
  log "Environment check failed, exiting"
  exit 1
fi

# Run the bot
log "Running bot with prefix: $PREFIX"
run_bot "$PREFIX" "${DEBUG_GUILDS[@]}"
exit_code=$?

log "Bot exited with code $exit_code"
exit $exit_code